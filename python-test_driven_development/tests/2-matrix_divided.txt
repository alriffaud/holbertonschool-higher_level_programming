=====================
Using ``matrix_divided``
=====================

First we import ``matrix_divided`` from the ``2-matrix_divided`` module:

>>> matrix_divided = __import__('2-matrix_divided').matrix_divided

Now use it:

>>> matrix_divided()
Traceback (most recent call last):
...
TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

>>> matrix_divided([], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[]], 3)
[[]]

>>> matrix_divided("hola", 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided(None, 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([1, 2, 3], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 2.6)
[[0.38, 0.77, 1.15], [1.54, 1.92, 2.31]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], -1.3)
[[-0.77, -1.54, -2.31], [-3.08, -3.85, -4.62]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 'a')
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], None)
Traceback (most recent call last):
...
TypeError: div must be a number

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('inf'))
[[0.0, 0.0, 0.0], [0.0, 0.0, 0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('-inf'))
[[-0.0, -0.0, -0.0], [-0.0, -0.0, -0.0]]

>>> matrix_divided([[1, 2, 3], [4, 5, 6]], float('nan'))
[[nan, nan, nan], [nan, nan, nan]]

>>> matrix_divided([[1.3, 2, 3], [4.0, 5, 6.9]], 3)
[[0.43, 0.67, 1.0], [1.33, 1.67, 2.3]]

>>> matrix_divided([[1.3, 2, 2.0, 2.8, 3], [1, 2, 4.0, 5, 6.9]], 3)
[[0.43, 0.67, 0.67, 0.93, 1.0], [0.33, 0.67, 1.33, 1.67, 2.3]]

>>> matrix_divided([[1.3, 2.4, 3.6], [4.0, 5.1, 6.9]], 3)
[[0.43, 0.8, 1.2], [1.33, 1.7, 2.3]]

>>> matrix_divided([[1.3, 'hola', 3.6], [4.0, 5.1, 6.9]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1.3, 2.4, 3.6], 'hola'], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1.3, 2.4, 3.6], 5], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1.3, 2.4, 3.6], [4.0, 5.1]], 3)
Traceback (most recent call last):
...
TypeError: Each row of the matrix must have the same size

>>> matrix_divided([[1.3, None, 3.6], [4.0, 5.1, 6.9]], 3)
Traceback (most recent call last):
...
TypeError: matrix must be a matrix (list of lists) of integers/floats

>>> matrix_divided([[1.3, float('inf'), 3.6], [4.0, 5.1, 6.9]], 3)
[[0.43, inf, 1.2], [1.33, 1.7, 2.3]]

>>> matrix_divided([[1.3, float('-inf'), 3.6], [4.0, 5.1, 6.9]], 3)
[[0.43, -inf, 1.2], [1.33, 1.7, 2.3]]

>>> matrix_divided([[1.3, float('nan'), 3.6], [4.0, 5.1, 6.9]], 3)
[[0.43, nan, 1.2], [1.33, 1.7, 2.3]]
